<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">

  <variable name="MicrosoftLevel" value="${level:lowercase=true:truncate=4:when=level==LogLevel.Info or level==LogLevel.Warn}${when:when=level==LogLevel.Error:inner=fail}${when:when=level==LogLevel.Fatal:inner=crit}${when:when=level==LogLevel.Debug:inner=dbug}${when:when=level==LogLevel.Trace:inner=trce}" />
  <variable name="MicrosoftLayout" value="${MicrosoftLevel}: ${logger}[${event-properties:EventId_Id:whenEmpty=0}][${longdate}]${newline}      ${message}${onexception:inner=${newline}${exception:format=tostring}}" />
  <variable name="MicrosoftLayout" value="${MicrosoftLevel}: ${logger}[${event-properties:EventId_Id:whenEmpty=0}][${longdate}][url: ${aspnet-request-url}][action: ${aspnet-mvc-action}][${callsite}][body: ${aspnet-request-posted-body}] ${newline}      ${message}${onexception:inner=${newline}${exception:format=tostring}}" />

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets async="true">
    <!-- File Target for all log messages with basic details -->
    <target xsi:type="File" name="fullfile" fileName="c:\temp\bs_hornet_service_full-${shortdate}.log" layout ="${MicrosoftLayout}" />
				<!--layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />-->

    <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
    <target xsi:type="File" name="webfile" fileName="c:\temp\bs_hornet_service_web-${shortdate}.log" layout ="${MicrosoftWebLayout}" />
				<!--layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}| body: ${aspnet-request-posted-body}" />-->

    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <!--
    <target xsi:type="Console" name="lifetimeConsole" layout="${level:truncate=4:tolower=true}\: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />-->

    <target name="console" xsi:type="Console" layout="${MicrosoftLayout}" writeBuffer="true" />

    <target name="colorconsole" xsi:type="ColoredConsole" layout="${MicrosofWebtLayout}" useDefaultRowHighlightingRules="false">
      <highlight-word foregroundColor="DarkGreen" regex="^info" />
      <highlight-word foregroundColor="Yellow" regex="^warn" />
      <highlight-word foregroundColor="Black" backgroundColor="Red" regex="^fail" />
      <highlight-word foregroundColor="White" backgroundColor="Red" regex="^crit" />
    </target>


  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="fullfile" />
    <logger name="*" minlevel="Trace" writeTo="console" />    

    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.AspNetCore.Hosting.Diagnostics" minlevel="Info" writeTo="webfile" final="true" />

    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />

  </rules>
</nlog>